<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sneaklife.pms.dao.system.authority.opera.ColumnsMapper">
  <select id="findAllPage"  parameterType="map" resultType="map">
    select
      cl.id as id,
      cl.title as title,
      cl.field as field,
      cl.align as align,
      dd.name as alignName
    from columns cl inner join data_dictionary dd on cl.align = dd.value
    <where>
      cl.is_del = 0
      <if test="menuId != null and menuId != ''">
        and cl.menu_id = #{menuId}
      </if>
      <if test="align != null and align != ''">
        and cl.align = #{align}
      </if>
      <if test="field != null and field != ''">
        and cl.field like CONCAT(#{field},'%')
      </if>
    </where>
  </select>
  <select id="findColumns" resultType="map" parameterType="map">
    select
      id as id,
      field as field,
      title as title,
      align as align,
      menu_id as menuId
    from columns
    <where>
      is_del = 0
      <if test="menuId != null and menuId != ''">
        AND menu_id = #{menuId}
      </if>
    </where>
  </select>


  <insert id="insert" parameterType="map">
    insert into columns
    (
      id,
      field,
      title,
      is_del,
      create_date,
      update_date,
      align,
      menu_id
    )
    value
    (
      REPLACE(UUID(), '-', ''),
      #{field,jdbcType=VARCHAR},
      #{title,jdbcType=VARCHAR},
      0,
      NOW(),
      NOW(),
      #{align,jdbcType=VARCHAR},
      #{menuIdTemp,jdbcType=CHAR}
    )
  </insert>

  <update id="update" parameterType="map">
    update columns
    <set>
      <if test="field != null">
        field = #{field,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="align != null">
        align = #{align,jdbcType=INTEGER},
      </if>
    </set>
    <where>
      id = #{id}
    </where>
  </update>

  <update id="delete" parameterType="map">
    update columns set is_del = 1
    <where>
      id in
      <foreach collection="map.ids" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>
  </update>
</mapper>
