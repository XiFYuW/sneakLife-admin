<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sneaklife.pms.dao.system.authority.opera.OperaInMapper">
  <select id="findAllPage"  parameterType="map" resultType="map">
    select
      oi.id as id,
      oi.field as field,
      oi.html_type as htmlType,
      oi.text_name as textName,
      oi.rule as rule,
      dd.name as htmlTypeName,
      dd1.name as ruleName
    from opera_in oi inner join data_dictionary dd on oi.html_type = dd.value
    inner join data_dictionary dd1 on oi.rule = dd1.value
    <where>
      oi.is_del = 0
      <if test="menuId != null and menuId != ''">
        and oi.menu_id = #{menuId}
      </if>
      <if test="htmlType != null and htmlType != ''">
        and oi.html_type = #{htmlType}
      </if>
      <if test="rule != null and rule != ''">
        and oi.rule = #{rule}
      </if>
      <if test="field != null and field != ''">
        and oi.field like CONCAT(#{field},'%')
      </if>
    </where>
  </select>

  <select id="findOperaInByShow" resultType="com.sneaklife.pms.entity.OperaIn" parameterType="map">
    select
      id as id,
      text_name as textName,
      html_type as htmlType,
      field as field,
      is_show as isShow,
      menu_id as menuId
    from opera_in
    <where>
      is_del = 0
      <if test="isShow != null">
        AND is_show = #{isShow}
      </if>
      <if test="menuId != null and menuId != ''">
        AND menu_id = #{menuId}
      </if>
    </where>
  </select>
  <update id="updateOperaInShow" parameterType="map">
    update opera_in
    <set>
      is_show = #{status}
    </set>
    <where>
      id = #{treeViewId}
    </where>
  </update>
  <select id="checkOperaInByShow" parameterType="map" resultType="int">
    select count(id) from opera_in where is_del = 0 AND is_show = 0 AND menu_id = #{menuId}
  </select>
  <select id="checkOperaInById" parameterType="map" resultType="int">
    select count(id) from opera_in where id = #{treeViewId} AND is_del = 0
  </select>

  <select id="getSelectsKyByMenuId" parameterType="string" resultType="map">
    SELECT
      id as id,
      field as field
    FROM opera_in
    where menu_id = #{menuId} and html_type = #{htmlType} and is_del = 0 and is_show = 0;
  </select>

  <select id="findByCheckInId" parameterType="string" resultType="map">
    SELECT
      id as id,
      rule as rule,
      text_name as textName,
      field as field
    FROM opera_in
    where menu_id = #{checkInId} and is_del = 0 and is_show = 0;
  </select>


  <insert id="insert" parameterType="map">
    insert into opera_in
    (
      id,
      text_name,
      html_type,
      field,
      create_date,
      update_date,
      is_del,
      menu_id,
      rule,
      is_show
    )
    value
    (
      REPLACE(UUID(), '-', ''),
      #{textName,jdbcType=VARCHAR},
      #{htmlType,jdbcType=VARCHAR},
      #{field,jdbcType=VARCHAR},
      NOW(),
      NOW(),
      0,
      #{menuIdTemp,jdbcType=CHAR},
      #{rule,jdbcType=VARCHAR},
      0
    )
  </insert>

  <update id="update" parameterType="map">
    update opera_in
    <set>
      <if test="textName != null">
        text_name = #{textName,jdbcType=VARCHAR},
      </if>
      <if test="htmlType != null">
        html_type = #{htmlType,jdbcType=INTEGER},
      </if>
      <if test="field != null">
        field = #{field,jdbcType=INTEGER},
      </if>
      <if test="rule != null">
        rule = #{rule,jdbcType=INTEGER},
      </if>
    </set>
    <where>
      id = #{id}
    </where>
  </update>

  <update id="delete" parameterType="map">
    update opera_in set is_del = 1
    <where>
      id in
      <foreach collection="map.ids" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>
  </update>
</mapper>
