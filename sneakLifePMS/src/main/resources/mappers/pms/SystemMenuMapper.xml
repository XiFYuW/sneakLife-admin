<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sneaklife.pms.dao.system.SystemMenuMapper">
  <resultMap id="SystemMenuMap" type="com.sneaklife.pms.entity.SystemMenu">
    <id column="ID" jdbcType="CHAR" property="id" />
    <result column="TAB" jdbcType="VARCHAR" property="tab" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="PAGE_URL" jdbcType="VARCHAR" property="pageUrl" />
    <result column="CREATE_DATE" jdbcType="DATE" property="createDate" />
    <result column="UPDATE_DATE" jdbcType="DATE" property="updateDate" />
    <result column="PID" jdbcType="CHAR" property="pid" />
    <result column="IS_DEL" jdbcType="INTEGER" property="isDel" />
    <result column="DATA_URL" jdbcType="VARCHAR" property="dataUrl" />
    <result column="ITEM_URL" jdbcType="VARCHAR" property="itemUrl" />
  </resultMap>
  <sql id="SystemMenuBody">
    ID,TAB,NAME,PAGE_URL,PID,DATA_URL,ITEM_URL
  </sql>
  <select id="getByIsDel" parameterType="int" resultMap="SystemMenuMap">
    select <include refid="SystemMenuBody"/> from system_menu
    <where>
      is_del = #{isDel}
    </where>
  </select>

  <select id="findAllPage"  parameterType="map" resultType="map">
    select
      sm.id as id,
      sm.name as name,
      sm.data_url as dataUrl,
      sm.item_url as itemUrl,
      sm.page_url as pageUrl,
      sm.tab as tab,
      sm.pid as pid,
      coalesce(sm1.tab,'') as pidName
      from system_menu sm left join system_menu sm1 on sm.pid = sm1.id
      <where>
        sm.is_del = 0
        <if test="pid != null and pid != ''">
          and sm.pid = #{pid}
        </if>
        <if test="name != null and name != ''">
          and sm.name like CONCAT(#{name},'%')
        </if>
      </where>
  </select>
  <select id="getByBatchId" parameterType="java.util.ArrayList" resultMap="SystemMenuMap">
    select <include refid="SystemMenuBody"/> from system_menu
    <where>
      id in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>
  </select>

  <select id="getByNotBatchId" parameterType="java.util.ArrayList" resultMap="SystemMenuMap">
    select <include refid="SystemMenuBody"/> from system_menu
    <where>
      id not in
      <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>
  </select>

  <select id="getItemUrlById" parameterType="string" resultType="string">
    SELECT item_url as itemUrl from system_menu where id = #{id} and is_del = 0
  </select>

  <insert id="insert" parameterType="map">
    insert into system_menu
    (
      id,
      tab,
      name,
      <if test="pageUrl != null">
        page_url,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="dataUrl != null">
        data_url,
      </if>
      <if test="itemUrl != null">
        item_url,
      </if>
      create_date,
      update_date,
      is_del
    )
    values
    (
      REPLACE(UUID(), '-', ''),
      #{tab},
      #{name},
      <if test="pageUrl != null">
        #{pageUrl},
      </if>
      <if test="pid != null">
        #{pid},
      </if>
      <if test="dataUrl != null">
        #{dataUrl},
      </if>
      <if test="itemUrl != null">
        #{itemUrl},
      </if>
      now(),
      now(),
      0
    )
  </insert>

  <update id="update" parameterType="map">
    update system_menu
    <set>
      tab = #{tab},
      name = #{name},
      <if test="pageUrl != null">
        page_url = #{pageUrl},
      </if>
      <if test="pid != null">
        pid = #{pid},
      </if>
      <if test="dataUrl != null">
        data_url = #{dataUrl},
      </if>
      <if test="itemUrl != null">
        item_url = #{itemUrl},
      </if>
      update_date = now()
    </set>
    <where>
      id = #{id}
    </where>
  </update>

  <update id="delete" parameterType="map">
    update system_menu set is_del = 1
    <where>
      id in
      <foreach collection="map.ids" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>
  </update>
</mapper>
