<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sneaklife.pms.dao.system.dictionary.DataDictionaryMapper">
  <select id="findAllPage" parameterType="map" resultType="java.util.Map">
    select
      dd.id as id,
      dd.name as name,
      dd.type_id as typeId,
      dd.value as value,
      td.name as typeName
    from data_dictionary dd inner join type_dictionary td on td.id = dd.type_id
    <where>
      dd.is_del = 0
      <if test="name != null and name != ''">
        and dd.name = #{name}
      </if>
      <if test="typeId != null and typeId != ''">
        and dd.type_id = #{typeId}
      </if>
      <if test="value != null and value != ''">
        and dd.value = #{value}
      </if>
    </where>
  </select>

  <insert id="insert" parameterType="map">
    insert into data_dictionary(
      id,
      <if test="name != null">
        name,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="value != null">
        value,
      </if>
      create_date,
      update_date,
      is_del
    ) values (
      REPLACE(UUID(), '-', ''),
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      NOW(),
      NOW(),
      0
    )
  </insert>

  <update id="update" parameterType="map">
    update data_dictionary
    <set>
      <if test="name != null">
        name = #{name},
      </if>
      <if test="typeId != null">
        type_id = #{typeId},
      </if>
      <if test="value != null">
        value = #{value},
      </if>
      update_date = now()
    </set>
    <where>
      id = #{id}
    </where>
  </update>

  <update id="delete" parameterType="map">
    update data_dictionary set is_del = 1
    <where>
      id in
      <foreach collection="map.ids" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>
  </update>

  <select id="getNameValueByTypeId" parameterType="long" resultType="map">
    SELECT
      dd.name as name,
      dd.value as value
    FROM data_dictionary dd
    <where>
      dd.is_del = 0 and dd.type_id = #{typeId}
    </where>
  </select>
</mapper>
